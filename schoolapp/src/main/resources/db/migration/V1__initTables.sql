CREATE SCHEMA IF NOT EXISTS school;
    
DROP TABLE IF EXISTS school.COURSES CASCADE;
DROP TABLE IF EXISTS school.GROUPS CASCADE;
DROP TABLE IF EXISTS school.STUDENTS CASCADE;
DROP TABLE IF EXISTS school.STUDENTS_COURSES CASCADE;

CREATE TABLE IF NOT EXISTS school.COURSES
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 99999 CACHE 1 ),
    name varchar(255) COLLATE pg_catalog."default" NOT NULL,
    description varchar(255) COLLATE pg_catalog."default",
    CONSTRAINT courses_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS school.GROUPS
(
    group_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 99999 CACHE 1 ),
    name varchar(255) COLLATE pg_catalog.default NOT NULL,
    CONSTRAINT GROUPS_pkey PRIMARY KEY (group_id)
);

CREATE TABLE IF NOT EXISTS school.STUDENTS
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 99999 CACHE 1 ),
    firstname varchar(255) COLLATE pg_catalog.default NOT NULL,
    lastname varchar(255) COLLATE pg_catalog.default NOT NULL,
    group_id integer,
    CONSTRAINT STUDENTS_pkey PRIMARY KEY (id),
    CONSTRAINT GROUPS_fkey FOREIGN KEY (group_id)
        REFERENCES school.GROUPS (group_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
);

CREATE TABLE IF NOT EXISTS school.STUDENTS_COURSES
(
    student_id integer NOT NULL,
    course_id integer NOT NULL,
    CONSTRAINT STUDENTSCOURSE_pkey PRIMARY KEY (student_id, course_id),
    CONSTRAINT COURSES_fkey FOREIGN KEY (course_id)
        REFERENCES school.COURSES (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID,
    CONSTRAINT STUDENTS_fkey FOREIGN KEY (student_id)
        REFERENCES school.STUDENTS (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
);